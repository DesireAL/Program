day01 2022.12.13      java      安装了2022.3版本的IDEL 安装了OracleJDK11，配置了环境变量，不过IDEL似乎不需要自己更改环境变量，若使用Eclipse则需要
                                点击行数旁边可设置断点，右键断点可进行编辑
                                ex3.1: static的用法(https://blog.csdn.net/Ambition_ZM/article/details/101705741)

day02 2022.12.14      java      ex3.1: 类的属性为全局变量(s1)，方法中的属性为局部变量(s2)
                                       print()输出完毕后不换行，而println()输出完毕后会换行  char用于储存单个字符 String用于储存字符串 " "表示字符串 ' '表示单个字符 char x='a'
                                       char与int可以通过Unicode相互转换  在println中可以使用(int)word来让word变为整数型  boolean定义布尔类型

day03 2022.12.15      java      3.2:   整明白了IDEA中项目与模块的关系，重新创建了JAVA项目  python的**与//运算符无法在java中使用，若想要进行幂运算需要使用Math.pow(底数，指数)
                                       long型需要在数的后面加上L/l  float型需要在数的后面加上F/f  可以使用<final 数据类型 常量名称 [= 值]>声明常量，且必须在定义时就设置初值
                                3.3:   在类体中声明的变量为乘员变量，乘员变量在整个类中都有效(全局)  在类的方法体中声明的变量为局部变量，只在当前代码块中有效
                                       乘员变量前加static即为静态变量(类变量)，可以通过类名.静态变量进行跨类使用，否则即为实例变量
                                       一个java文件可以有多个类，但只能有一个public类，且需要与文件名一致(类似于main()) 所以java文件中的其他类是为public类做修饰的

day04 2022.12.16      java      3.4:   import java.util.Scanner调用扫描器  使用Scanner 变量 = new Scanner(System.in)创建扫描器，获取控制台输入的值  使用 变量.next数据类型()来接收数值/字符串
                                       nextline()接收字符串遇到空格时不会停止 next()遇到空格时会停止    三元运算:boolean b=1>2?true:false 若1>2则b为true，否则为false，可换成其他数据类型
                                       b = ++a 先将a的值+1，然后赋给b  b = a++ 先将a的值赋给b，然后a的值+1  &&逻辑与(and) ||逻辑或(or)
                                3.5:   隐式/显示类型转换
                                3.6:   //单行注释   /*  */多行注释   /**  */文档注释

day05 2022.12.17      java      4.1:   { }复合语句，可以在里面创建临时变量
                                4.2:   if(布尔表达式){语句序列} else if(){} else{}  if语句格式
                                       switch(表达式){case 常量值1: 语句块1; break; ... default: 语句块n; break;}   switch语句格式 case后不能为非整数的实数，没写语句块的case会使用下一个语句块。
                                4.3:   while(语句表达式){语句序列}  do{语句序列}while(语句表达式);  for(表达式1;表达式2;表达式3){语句序列} 1:变量初始化 2:循环条件 3:改变变量  两种循环
                                       for(元素类型x:遍历对象obj){引用了x的java语句;}  foreach语句(和python中的for i in x差不多?)
